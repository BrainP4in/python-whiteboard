Linux Electronic Whiteboard with Wiimote
========================================

This program allows you to build and operate an electronic whiteboard using gnu/linux, a wiimote and an IR pen.

If you have git installed on your system you can get the latest (development) version, typing:

$ git clone git://github.com/pnegre/python-whiteboard.git

To download packaged versions of the program, point your browser to http://github.com/pnegre/python-whiteboard/downloads

It's recommended to disable the desktop effects, to avoid program crashes and malfunctions.


Compilation and installation
----------------------------

Use make:

$ make all
# make install

If you want to create a .deb package:

$ make deb

Required packages:

- To run make: libqt4-dev qt4-dev-tools python-qt4-dev
- To make the deb package: build-essential fakeroot dpkg-dev



Configuration
-------------

In menu: File -> configuration

Here you can choose if you want to do calibration fullscreen (recommended).

Also, you can restrict the bluetooth connection to authorized devices. To add a device, first make the connection and then press the "add device" button in the configuration dialog.

Both the mac list and the selected device will be saved in the configuration file (using qt's qsettings).


Calibration
-----------

The calibration process can be done in two ways:

- You can choose "fullscreen calibration": The application will change into a white fullscreen and will draw four crosses, that you have to mark clockwise.

- If you don't mark the "fullscreen" check in the configuration dialog, the calibration process is done in the same way, but you have to point at the four corners of the SCREEN, in the same order as before: top-left, top-right, bottom-left, bottom-right.

After that, you simply push "activate".

In the calibration screen, you can use the UP/DOWN keys to actually move inwards the calibration points, making it easier to do the process.

Other stuff
-----------

There are other features (beware: some of them are a little experimental): you can save the calibration matrix and you can assign functions to the off-limits projection area.


